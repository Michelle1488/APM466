import pandas as pd
from datetime import datetime, timedelta

data = pd.read_csv("C:\\Users\\Michelle\\Downloads\\466_DATA.csv")

price_data = data.iloc[:, 6:17]

price_data = data.iloc[:, 6:17]
print(price_data)

# Calculate dirty price for a given bond
def find_dp(nth_bond, price_data):
    date1 = datetime(2024, 1, 8)
    date2 = datetime(2023, 9, 1)
    # Calculate the difference in days
    diff_days = (date1 - date2).days

    # Initialize dirty price list
    dp = []

    # Calculate dirty price for each day
    for i in range(len(price_data)):
        if i < 5:
            dp.append(((diff_days + i) / 365) * price_data.iloc[nth_bond-1, 1] + price_data.iloc[nth_bond-1, i])
        elif 4 < i < 10:
            dp.append(((diff_days + 2 + i) / 365) * price_data.iloc[nth_bond-1, 1] + price_data.iloc[nth_bond-1, i])
        elif i == 10:
            dp.append(((diff_days + 4 + i) / 365) * price_data.iloc[nth_bond-1, 1] + price_data.iloc[nth_bond-1, i])

    return dp


# Calculate dirty price for each bond
dirty_price = []
for i in range(price_data.shape[1]):
    dp = find_dp(i+1, price_data)
    dirty_price.append(dp)

dirty_price_df = pd.DataFrame(dirty_price)
print(dirty_price_df)
print(dirty_price[0][1])

from sympy import symbols, Eq, exp, solve

coupon = data.iloc[:,1]
def find_ytm1(nth_bond, coupon, price):
    r = symbols('r')
    total_sum = 0.5 * coupon[nth_bond-1] * exp(r * 0.5) + 100 * exp(r * 0.5) - price
    eq = Eq(total_sum, r)
    # Solve the equation
    solution = solve(eq, r)
    return solution


def find_ytm2 (nth_bond, coupon, price):
    r = symbols('r')
    total_sum = 0.5 * coupon[nth_bond - 1] * exp(r * 0.5) + 0.5 * coupon[nth_bond - 1] * exp(r * 1) + \
                100 * exp(r * 1) - price
    eq = Eq(total_sum, r)
    # Solve the equation
    solution = solve(eq, r)
    return solution
ytm_bond1 = []
print(find_ytm1(1, coupon, dirty_price[0][0]))
for i in range(len(dirty_price)):
    ytm_bond1.append(find_ytm1(1, coupon, dirty_price[0][i]))
